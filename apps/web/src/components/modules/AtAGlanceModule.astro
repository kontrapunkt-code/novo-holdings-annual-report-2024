---
import { LottieGrid } from "@/components/solid/lottie-grid";
import LandingLayout from "@/layouts/LandingLayout.astro";
import { tryCatch } from "@/scripts/helpers";
import type { PageModuleProps } from "@/scripts/queries";

type Props = PageModuleProps<"atAGlanceModule">;

const { title, animations: animationsProp } = Astro.props;

const animations = await Promise.all(
	animationsProp?.map(async (animation) => {
		const [aspectRatio] = await tryCatch(async () => {
			const response = await fetch(animation?.lottie?.asset?.url ?? "");
			const { w, h } = await response.json();
			return `${w}/${h}`;
		});

		return {
			src: animation.lottie?.asset?.url ?? "",
			aspectRatio: aspectRatio ?? "1/1",
		};
	}) ?? [],
);
---

<LandingLayout>
	<h2 class="headline-extralight col-span-full mb-4 text-center">
		{title}
	</h2>
	<section class="add-a-glance-section col-span-full">
		<LottieGrid {animations} client:load />
	</section>
</LandingLayout>

<style is:global>
	.at-a-glance-grid > * {
		border: 0.0625rem solid transparent;
		border-radius: 0.5rem;
		background:
			linear-gradient(
				to bottom,
				hsl(from #b2b7cd h s calc(l + 2%)) 0%,
				hsl(from #b2b7cd h s calc(l - 2%)) 100%
			),
			linear-gradient(
				to bottom,
				hsl(from #b2b7cd h s l) 0%,
				hsl(from #b2b7cd h s calc(l - 6%)) 100%
			);
		background-clip: padding-box, border-box;
		background-origin: padding-box, border-box;
	}
</style>
