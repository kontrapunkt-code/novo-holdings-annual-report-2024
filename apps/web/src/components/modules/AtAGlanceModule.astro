---
import { LottieGrid } from "@/components/solid/lottie-grid";
import type { Props as LottieGridProps } from "@/components/solid/lottie-grid";
import LandingLayout from "@/layouts/LandingLayout.astro";
import type { ModuleProps } from "@/scripts/types";
import type { LottieJSON } from "@lottielab/lottie-player";

type Props = ModuleProps<"atAGlanceModule">;

const animations = Object.entries(
	import.meta.glob<LottieJSON>("/public/animations/*.json", {
		eager: true,
	}),
).map(([key, value]) => ({
	src: key.replace("/public", ""),
	aspectRatio: `${value.w}/${value.h}`,
})) satisfies LottieGridProps["animations"];
---

<LandingLayout>
	<h2 class="headline-01 col-span-full text-center mb-4">
		Novo Holdings at a Glance
	</h2>
	<section class="add-a-glance-section col-span-full">
		<LottieGrid {animations} client:load />
	</section>
</LandingLayout>

<script>
	// import "@lottielab/lottie-player/web";
	// import type LottieWeb from "@lottielab/lottie-player/web";

	// async function playLotties() {
	// 	const lotties: NodeListOf<LottieWeb> = document.querySelectorAll(
	// 		"lottie-player.at-a-glance-lottie",
	// 	);

	// 	await Promise.all(
	// 		[...lotties].map(
	// 			(l) => new Promise((r) => l.addEventListener("load", r)),
	// 		),
	// 	);

	// 	for (const lottie of lotties) {
	// 		lottie.loop = false;
	// 		lottie.pause();
	// 	}

	// 	for (const lottie of lotties) {
	// 		lottie.play();

	// 		await new Promise((resolve) => setTimeout(resolve, 100));
	// 	}
	// }

	// playLotties();
</script>
